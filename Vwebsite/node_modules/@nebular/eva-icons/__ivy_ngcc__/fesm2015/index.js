import { __decorate, __metadata } from 'tslib';
import { NgModule } from '@angular/core';
import { NbIconLibraries, NbSvgIcon } from '@nebular/theme';
import { icons } from 'eva-icons';

/*
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@nebular/theme';
class NbEvaSvgIcon extends NbSvgIcon {
    constructor(name, content) {
        super(name, '');
        this.name = name;
        this.content = content;
    }
    getContent(options) {
        return this.content.toSvg(Object.assign({ width: '100%', height: '100%', fill: 'currentColor' }, options));
    }
}
let NbEvaIconsModule = class NbEvaIconsModule {
    constructor(iconLibrary) {
        this.NAME = 'eva';
        iconLibrary.registerSvgPack(this.NAME, this.createIcons());
        iconLibrary.setDefaultPack(this.NAME);
    }
    createIcons() {
        return Object
            .entries(icons)
            .map(([name, icon]) => {
            return [name, new NbEvaSvgIcon(name, icon)];
        })
            .reduce((newIcons, [name, icon]) => {
            newIcons[name] = icon;
            return newIcons;
        }, {});
    }
};
NbEvaIconsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NbEvaIconsModule });
NbEvaIconsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NbEvaIconsModule_Factory(t) { return new (t || NbEvaIconsModule)(ɵngcc0.ɵɵinject(ɵngcc1.NbIconLibraries)); } });
NbEvaIconsModule = __decorate([ __metadata("design:paramtypes", [NbIconLibraries])
], NbEvaIconsModule);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NbEvaIconsModule, [{
        type: NgModule,
        args: [{}]
    }], function () { return [{ type: ɵngcc1.NbIconLibraries }]; }, null); })();

/*
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NbEvaSvgIcon, NbEvaIconsModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7b0xBQUU7QUFDRiwrQkFFRztBQUNIOzs7O2dGQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2RlY29yYXRlLCBfX21ldGFkYXRhIH0gZnJvbSAndHNsaWInO1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOYkljb25MaWJyYXJpZXMsIE5iU3ZnSWNvbiB9IGZyb20gJ0BuZWJ1bGFyL3RoZW1lJztcclxuaW1wb3J0IHsgaWNvbnMgfSBmcm9tICdldmEtaWNvbnMnO1xyXG5cclxuLypcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEFrdmVvLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi9cclxuY2xhc3MgTmJFdmFTdmdJY29uIGV4dGVuZHMgTmJTdmdJY29uIHtcclxuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGNvbnRlbnQpIHtcclxuICAgICAgICBzdXBlcihuYW1lLCAnJyk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICB0aGlzLmNvbnRlbnQgPSBjb250ZW50O1xyXG4gICAgfVxyXG4gICAgZ2V0Q29udGVudChvcHRpb25zKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGVudC50b1N2ZyhPYmplY3QuYXNzaWduKHsgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnMTAwJScsIGZpbGw6ICdjdXJyZW50Q29sb3InIH0sIG9wdGlvbnMpKTtcclxuICAgIH1cclxufVxyXG5sZXQgTmJFdmFJY29uc01vZHVsZSA9IGNsYXNzIE5iRXZhSWNvbnNNb2R1bGUge1xyXG4gICAgY29uc3RydWN0b3IoaWNvbkxpYnJhcnkpIHtcclxuICAgICAgICB0aGlzLk5BTUUgPSAnZXZhJztcclxuICAgICAgICBpY29uTGlicmFyeS5yZWdpc3RlclN2Z1BhY2sodGhpcy5OQU1FLCB0aGlzLmNyZWF0ZUljb25zKCkpO1xyXG4gICAgICAgIGljb25MaWJyYXJ5LnNldERlZmF1bHRQYWNrKHRoaXMuTkFNRSk7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVJY29ucygpIHtcclxuICAgICAgICByZXR1cm4gT2JqZWN0XHJcbiAgICAgICAgICAgIC5lbnRyaWVzKGljb25zKVxyXG4gICAgICAgICAgICAubWFwKChbbmFtZSwgaWNvbl0pID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIFtuYW1lLCBuZXcgTmJFdmFTdmdJY29uKG5hbWUsIGljb24pXTtcclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAucmVkdWNlKChuZXdJY29ucywgW25hbWUsIGljb25dKSA9PiB7XHJcbiAgICAgICAgICAgIG5ld0ljb25zW25hbWVdID0gaWNvbjtcclxuICAgICAgICAgICAgcmV0dXJuIG5ld0ljb25zO1xyXG4gICAgICAgIH0sIHt9KTtcclxuICAgIH1cclxufTtcclxuTmJFdmFJY29uc01vZHVsZSA9IF9fZGVjb3JhdGUoW1xyXG4gICAgTmdNb2R1bGUoe30pLFxyXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtOYkljb25MaWJyYXJpZXNdKVxyXG5dLCBOYkV2YUljb25zTW9kdWxlKTtcclxuXHJcbi8qXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCBBa3Zlby4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICovXHJcblxyXG4vKipcclxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXHJcbiAqL1xyXG5cclxuZXhwb3J0IHsgTmJFdmFTdmdJY29uLCBOYkV2YUljb25zTW9kdWxlIH07XHJcbiJdfQ==