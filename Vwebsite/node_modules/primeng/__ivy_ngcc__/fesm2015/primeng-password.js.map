{"version":3,"file":"primeng-password.js","sources":["../../src/app/components/password/password.ts","../../src/app/components/password/primeng-password.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,OnDestroy,DoCheck,NgZone} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler, ConnectedOverlayScrollHandler} from 'primeng/dom';\n\n@Directive({\n    selector: '[pPassword]',\n    host: {\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled'\n    }\n})\nexport class Password implements OnDestroy,DoCheck {\n\n    @Input() promptLabel: string = 'Enter a password';\n\n    @Input() weakLabel: string = 'Weak';\n\n    @Input() mediumLabel: string = 'Medium';\n\n    @Input() strongLabel: string = 'Strong';\n\n    @Input() feedback: boolean = true;\n\n    @Input() set showPassword(show: boolean) {\n        this.el.nativeElement.type = show ? 'text' : 'password';\n    }\n\n    panel: HTMLDivElement;\n\n    meter: any;\n\n    info: any;\n\n    filled: boolean;\n\n    scrollHandler: any;\n\n    documentResizeListener: any;\n\n    constructor(public el: ElementRef, public zone: NgZone) {}\n\n    ngDoCheck() {\n        this.updateFilledState();\n    }\n\n    @HostListener('input', ['$event'])\n    onInput(e) {\n        this.updateFilledState();\n    }\n\n    updateFilledState() {\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n    }\n\n    createPanel() {\n        this.panel = document.createElement('div');\n        this.panel.className = 'p-password-panel p-component p-password-panel-overlay p-connected-overlay';\n        this.meter = document.createElement('div');\n        this.meter.className = 'p-password-meter';\n        this.info = document.createElement('div');\n        this.info.className = 'p-password-info';\n        this.info.textContent = this.promptLabel;\n        this.panel.appendChild(this.meter);\n        this.panel.appendChild(this.info);\n        this.panel.style.minWidth = DomHandler.getOuterWidth(this.el.nativeElement) + 'px';\n        document.body.appendChild(this.panel);\n    }\n\n    showOverlay() {\n        if (this.feedback) {\n            if (!this.panel) {\n                this.createPanel();\n            }\n\n            this.panel.style.zIndex = String(++DomHandler.zindex);\n            this.panel.style.display = 'block';\n            this.zone.runOutsideAngular(() => {\n\n                setTimeout(() => {\n                    DomHandler.addClass(this.panel, 'p-connected-overlay-visible');\n                    this.bindScrollListener();\n                    this.bindDocumentResizeListener();\n                }, 1);\n            });\n            DomHandler.absolutePosition(this.panel, this.el.nativeElement);\n        }\n    }\n\n    hideOverlay() {\n        if (this.feedback && this.panel) {\n            DomHandler.addClass(this.panel, 'p-connected-overlay-hidden');\n            DomHandler.removeClass(this.panel, 'p-connected-overlay-visible');\n            this.unbindScrollListener();\n            this.unbindDocumentResizeListener();\n\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    this.ngOnDestroy();\n                }, 150);\n            });\n        }\n    }\n\n    @HostListener('focus')\n    onFocus() {\n        this.showOverlay();\n    }\n\n    @HostListener('blur')\n    onBlur() {\n        this.hideOverlay();\n    }\n\n    @HostListener('keyup', ['$event'])\n    onKeyup(e) {\n        if (this.feedback) {\n            let value = e.target.value,\n            label = null,\n            meterPos = null;\n\n            if (value.length === 0) {\n                label = this.promptLabel;\n                meterPos = '0px 0px';\n            }\n            else {\n                var score = this.testStrength(value);\n\n                if (score < 30) {\n                    label = this.weakLabel;\n                    meterPos = '0px -10px';\n                }\n                else if (score >= 30 && score < 80) {\n                    label = this.mediumLabel;\n                    meterPos = '0px -20px';\n                }\n                else if (score >= 80) {\n                    label = this.strongLabel;\n                    meterPos = '0px -30px';\n                }\n            }\n\n            if (!this.panel || !DomHandler.hasClass(this.panel, 'p-connected-overlay-visible')) {\n                this.showOverlay();\n            }\n\n            this.meter.style.backgroundPosition = meterPos;\n            this.info.textContent = label;\n        }\n    }\n\n    testStrength(str: string) {\n        let grade: number = 0;\n        let val: RegExpMatchArray;\n\n        val = str.match('[0-9]');\n        grade += this.normalize(val ? val.length : 1/4, 1) * 25;\n\n        val = str.match('[a-zA-Z]');\n        grade += this.normalize(val ? val.length : 1/2, 3) * 10;\n\n        val = str.match('[!@#$%^&*?_~.,;=]');\n        grade += this.normalize(val ? val.length : 1/6, 1) * 35;\n\n        val = str.match('[A-Z]');\n        grade += this.normalize(val ? val.length : 1/6, 1) * 30;\n\n        grade *= str.length / 8;\n\n        return grade > 100 ? 100 : grade;\n    }\n\n    normalize(x, y) {\n        let diff = x - y;\n\n        if (diff <= 0)\n            return x / y;\n        else\n            return 1 + 0.5 * (x / (x + y/4));\n    }\n\n    get disabled(): boolean {\n        return this.el.nativeElement.disabled;\n    }\n\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.el.nativeElement, () => {\n                if (DomHandler.hasClass(this.panel, 'p-connected-overlay-visible')) {\n                    this.hideOverlay();\n                }\n            });\n        }\n\n        this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    onWindowResize() {\n        this.hideOverlay();\n    }\n\n    ngOnDestroy() {\n        if (this.panel) {\n            if (this.scrollHandler) {\n                this.scrollHandler.destroy();\n                this.scrollHandler = null;\n            }\n\n            this.unbindDocumentResizeListener();\n\n            document.body.removeChild(this.panel);\n            this.panel = null;\n            this.meter = null;\n            this.info = null;\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Password],\n    declarations: [Password]\n})\nexport class PasswordModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}