{"version":3,"file":"primeng-tabview.js","sources":["../../src/app/components/tabview/tabview.ts","../../src/app/components/tabview/primeng-tabview.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,Output,EventEmitter,AfterContentInit,\n        ContentChildren,QueryList,TemplateRef,EmbeddedViewRef,ViewContainerRef,ChangeDetectorRef,ChangeDetectionStrategy, ViewEncapsulation, ViewChild, AfterViewChecked, forwardRef, Inject} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TooltipModule} from 'primeng/tooltip';\nimport {RippleModule} from 'primeng/ripple';\nimport {SharedModule,PrimeTemplate} from 'primeng/api';\nimport {BlockableUI} from 'primeng/api';\nimport {DomHandler} from 'primeng/dom';\n\nlet idx: number = 0;\n\n@Component({\n    selector: 'p-tabPanel',\n    template: `\n        <div [attr.id]=\"id\" class=\"p-tabview-panel\" [hidden]=\"!selected\"\n            role=\"tabpanel\" [attr.aria-hidden]=\"!selected\" [attr.aria-labelledby]=\"id + '-label'\" *ngIf=\"!closed\">\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"contentTemplate && (cache ? loaded : selected)\">\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            </ng-container>\n        </div>\n    `\n})\nexport class TabPanel implements AfterContentInit,OnDestroy {\n\n    @Input() header: string;\n    \n    @Input() closable: boolean;\n    \n    @Input() headerStyle: any;\n    \n    @Input() headerStyleClass: string;\n    \n    @Input() leftIcon: string;\n    \n    @Input() rightIcon: string;\n    \n    @Input() cache: boolean = true;\n\n    @Input() tooltip: any;\n    \n    @Input() tooltipPosition: string = 'top';\n\n    @Input() tooltipPositionStyle: string = 'absolute';\n\n    @Input() tooltipStyleClass: string;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n    \n    closed: boolean;\n    \n    view: EmbeddedViewRef<any>;\n    \n    _selected: boolean;\n\n    _disabled: boolean;\n    \n    loaded: boolean;\n    \n    id: string = `p-tabpanel-${idx++}`;\n    \n    contentTemplate: TemplateRef<any>;\n\n    headerTemplate: TemplateRef<any>;\n\n    tabView: TabView;\n\n    constructor(@Inject(forwardRef(() => TabView)) tabView, public viewContainer: ViewContainerRef, public cd: ChangeDetectorRef) {\n        this.tabView = tabView as TabView;\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n                \n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n    }\n    \n    @Input() get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(val: boolean) {\n        this._selected = val;\n        \n        if (!this.loaded) {\n            this.cd.detectChanges();\n        }\n\n        this.loaded = true;\n    }\n\n    @Input() get disabled(): boolean {\n        return this._disabled;\n    };\n\n    set disabled(disabled: boolean) {\n        this._disabled = disabled;\n        this.tabView.cd.markForCheck();\n    }\n    \n    ngOnDestroy() {\n        this.view = null;\n    }\n}\n\n@Component({\n    selector: 'p-tabView',\n    template: `\n        <div [ngClass]=\"'p-tabview p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ul #navbar class=\"p-tabview-nav\" role=\"tablist\">\n                <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n                    <li role=\"presentation\" [ngClass]=\"{'p-highlight': tab.selected, 'p-disabled': tab.disabled}\" [ngStyle]=\"tab.headerStyle\" [class]=\"tab.headerStyleClass\" *ngIf=\"!tab.closed\">\n                        <a role=\"tab\" class=\"p-tabview-nav-link\" [attr.id]=\"tab.id + '-label'\" [attr.aria-selected]=\"tab.selected\" [attr.aria-controls]=\"tab.id\" [pTooltip]=\"tab.tooltip\" [tooltipPosition]=\"tab.tooltipPosition\"\n                            [attr.aria-selected]=\"tab.selected\" [positionStyle]=\"tab.tooltipPositionStyle\" [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n                            (click)=\"open($event,tab)\" (keydown.enter)=\"open($event,tab)\" pRipple [attr.tabindex]=\"tab.disabled ? null : '0'\">\n                            <ng-container *ngIf=\"!tab.headerTemplate\">\n                                <span class=\"p-tabview-left-icon\" [ngClass]=\"tab.leftIcon\" *ngIf=\"tab.leftIcon\"></span>\n                                <span class=\"p-tabview-title\">{{tab.header}}</span>\n                                <span class=\"p-tabview-right-icon\" [ngClass]=\"tab.rightIcon\" *ngIf=\"tab.rightIcon\"></span>\n                            </ng-container>\n                            <ng-container *ngTemplateOutlet=\"tab.headerTemplate\"></ng-container>\n                            <span *ngIf=\"tab.closable\" class=\"p-tabview-close pi pi-times\" (click)=\"close($event,tab)\"></span>\n                        </a>\n                    </li>\n                </ng-template>\n                <li #inkbar class=\"p-tabview-ink-bar\"></li>\n            </ul>\n            <div class=\"p-tabview-panels\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n   changeDetection: ChangeDetectionStrategy.OnPush,\n   encapsulation: ViewEncapsulation.None,\n   styleUrls: ['./tabview.css']\n})\nexport class TabView implements AfterContentInit,AfterViewChecked,BlockableUI {\n\n    @Input() orientation: string = 'top';\n    \n    @Input() style: any;\n    \n    @Input() styleClass: string;\n    \n    @Input() controlClose: boolean;\n\n    @ViewChild('navbar') navbar: ElementRef;\n\n    @ViewChild('inkbar') inkbar: ElementRef;\n    \n    @ContentChildren(TabPanel) tabPanels: QueryList<TabPanel>;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onClose: EventEmitter<any> = new EventEmitter();\n\n    @Output() activeIndexChange: EventEmitter<number> = new EventEmitter();\n    \n    initialized: boolean;\n    \n    tabs: TabPanel[];\n    \n    _activeIndex: number;\n    \n    preventActiveIndexPropagation: boolean;\n\n    tabChanged: boolean;\n\n    constructor(public el: ElementRef, public cd: ChangeDetectorRef) {}\n      \n    ngAfterContentInit() {\n        this.initTabs();\n        \n        this.tabPanels.changes.subscribe(_ => {\n            this.initTabs();\n        });\n    }\n\n    ngAfterViewChecked() {\n        if (this.tabChanged) {\n            this.updateInkBar();\n            this.tabChanged = false;\n        }\n    }\n    \n    initTabs(): void {\n        this.tabs = this.tabPanels.toArray();\n        let selectedTab: TabPanel = this.findSelectedTab();\n        if (!selectedTab && this.tabs.length) {\n            if (this.activeIndex != null && this.tabs.length > this.activeIndex)\n                this.tabs[this.activeIndex].selected = true;\n            else\n                this.tabs[0].selected = true;\n\n            this.tabChanged = true;\n        }\n\n        this.cd.markForCheck();\n    }\n    \n    open(event: Event, tab: TabPanel) {\n        if (tab.disabled) {\n            if (event) {\n                event.preventDefault();\n            }\n            return;\n        }\n        \n        if (!tab.selected) {\n            let selectedTab: TabPanel = this.findSelectedTab();\n            if (selectedTab) {\n                selectedTab.selected = false\n            }\n            \n            this.tabChanged = true;\n            tab.selected = true;\n            let selectedTabIndex = this.findTabIndex(tab);\n            this.preventActiveIndexPropagation = true;\n            this.activeIndexChange.emit(selectedTabIndex);\n            this.onChange.emit({originalEvent: event, index: selectedTabIndex});\n        }\n        \n        if (event) {\n            event.preventDefault();\n        }\n    }\n    \n    close(event: Event, tab: TabPanel) {\n        if (this.controlClose) {\n            this.onClose.emit({\n                originalEvent: event,\n                index: this.findTabIndex(tab),\n                close: () => {\n                    this.closeTab(tab);\n                }}\n            );\n        }\n        else {\n            this.closeTab(tab);\n            this.onClose.emit({\n                originalEvent: event,\n                index: this.findTabIndex(tab)\n            });\n        }\n        \n        event.stopPropagation();\n    }\n    \n    closeTab(tab: TabPanel) {\n        if (tab.disabled) {\n            return;\n        }\n        if (tab.selected) {\n            this.tabChanged = true;\n            tab.selected = false;\n            for(let i = 0; i < this.tabs.length; i++) {\n                let tabPanel = this.tabs[i];\n                if (!tabPanel.closed&&!tab.disabled) {\n                    tabPanel.selected = true;\n                    break;\n                }\n            }\n        }\n        \n        tab.closed = true;\n    }\n    \n    findSelectedTab() {\n        for(let i = 0; i < this.tabs.length; i++) {\n            if (this.tabs[i].selected) {\n                return this.tabs[i];\n            }\n        }\n        return null;\n    }\n    \n    findTabIndex(tab: TabPanel) {\n        let index = -1;\n        for(let i = 0; i < this.tabs.length; i++) {\n            if (this.tabs[i] == tab) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    }\n    \n    getBlockableElement(): HTMLElement {\n        return this.el.nativeElement.children[0];\n    }\n    \n    @Input() get activeIndex(): number {\n        return this._activeIndex;\n    }\n\n    set activeIndex(val:number) {\n        this._activeIndex = val;\n        if (this.preventActiveIndexPropagation) {\n            this.preventActiveIndexPropagation = false;\n            return;\n        }\n\n        if (this.tabs && this.tabs.length && this._activeIndex != null && this.tabs.length > this._activeIndex) {\n            this.findSelectedTab().selected = false;\n            this.tabs[this._activeIndex].selected = true;\n        }\n    }\n\n    updateInkBar() {\n        let tabHeader = DomHandler.findSingle(this.navbar.nativeElement, 'li.p-highlight');\n        this.inkbar.nativeElement.style.width = DomHandler.getWidth(tabHeader) + 'px';\n        this.inkbar.nativeElement.style.left =  DomHandler.getOffset(tabHeader).left - DomHandler.getOffset(this.navbar.nativeElement).left + 'px';\n    }\n}\n\n\n@NgModule({\n    imports: [CommonModule,SharedModule,TooltipModule,RippleModule],\n    exports: [TabView,TabPanel,SharedModule],\n    declarations: [TabView,TabPanel]\n})\nexport class TabViewModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}