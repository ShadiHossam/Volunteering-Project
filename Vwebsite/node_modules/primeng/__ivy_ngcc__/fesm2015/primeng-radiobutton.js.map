{"version":3,"file":"primeng-radiobutton.js","sources":["../../src/app/components/radiobutton/radiobutton.ts","../../src/app/components/radiobutton/primeng-radiobutton.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,ElementRef,EventEmitter,forwardRef,ViewChild,ChangeDetectorRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const RADIO_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioButton),\n    multi: true\n};\n\n@Component({\n    selector: 'p-radioButton',\n    template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"{'p-radiobutton p-component':true,'p-radiobutton-checked': checked, 'p-radiobutton-disabled': disabled, 'p-radiobutton-focused': focused}\" [class]=\"styleClass\">\n            <div class=\"p-hidden-accessible\">\n                <input #rb type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.value]=\"value\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\"\n                    [checked]=\"checked\" (change)=\"onChange($event)\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" [disabled]=\"disabled\">\n            </div>\n            <div (click)=\"handleClick($event, rb, true)\" role=\"radio\" [attr.aria-checked]=\"checked\"\n                [ngClass]=\"{'p-radiobutton-box':true,\n                'p-highlight': checked, 'p-disabled': disabled, 'p-focus': focused}\">\n                <span class=\"p-radiobutton-icon\"></span>\n            </div>\n        </div>\n        <label (click)=\"select($event)\" [class]=\"labelStyleClass\"\n            [ngClass]=\"{'p-radiobutton-label':true, 'p-radiobutton-label-active':rb.checked, 'p-disabled':disabled, 'p-radiobutton-label-focus':focused}\"\n            *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `,\n    providers: [RADIO_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RadioButton implements ControlValueAccessor {\n\n    @Input() value: any;\n\n    @Input() name: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() label: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n\n    @Input() ariaLabelledBy: string;\n    \n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() labelStyleClass: string;\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n    \n    @ViewChild('rb') inputViewChild: ElementRef;\n            \n    public onModelChange: Function = () => {};\n    \n    public onModelTouched: Function = () => {};\n    \n    public checked: boolean;\n        \n    public focused: boolean;\n\n    constructor(public cd: ChangeDetectorRef) {}\n    \n    handleClick(event, radioButton, focus) {\n        event.preventDefault();\n\n        if (this.disabled) {\n            return;\n        }\n\n        this.select(event);\n\n        if (focus) {\n            radioButton.focus();\n        }\n    }\n    \n    select(event) {\n        if (!this.disabled) {\n            this.inputViewChild.nativeElement.checked = true;\n            this.checked = true;\n            this.onModelChange(this.value);\n            this.onClick.emit(event);\n        }\n    }\n            \n    writeValue(value: any) : void {\n        this.checked = (value == this.value);\n\n        if (this.inputViewChild && this.inputViewChild.nativeElement) {\n            this.inputViewChild.nativeElement.checked = this.checked;\n        }\n        \n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    \n    onInputFocus(event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n    }\n\n    onInputBlur(event) {\n        this.focused = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n    \n    onChange(event) {\n        this.select(event);\n    }\n\n    focus() {\n        this.inputViewChild.nativeElement.focus();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [RadioButton],\n    declarations: [RadioButton]\n})\nexport class RadioButtonModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}